{"version":3,"sources":["timer.js"],"names":["date","Date","timer","start","timeStart","now","setInterval","getTimeComponet","updateClockFace","hours","mins","secs","refs","clockFace","timeComponents","time","Math","floor"],"mappings":";AAAA,MAAMA,EAAO,IAAIC,KAEXC,EAAQ,CACZC,QACQC,MAAAA,EAAYH,KAAKI,MAEvBC,YAAY,KAGaC,EAFJN,KAAKI,MACOD,IAE9B,OAKP,SAASI,GAAgB,MAAEC,EAAF,KAASC,EAAT,KAAeC,IACtCC,KAAKC,UAAUC,kBAAoBL,KAASC,KAAQC,IAGtD,SAASJ,EAAgBQ,GAIhB,MAAA,CAAEN,MAHKO,KAAKC,MAAOF,EAAQ,MAAyB,MAG3CL,KAFHM,KAAKC,MAAOF,EAAQ,KAAoB,KAE/BJ,KADTK,KAAKC,MAAOF,EAAQ,IAAc,MATjDb,EAAMC","file":"timer.6b0ea703.js","sourceRoot":"../src","sourcesContent":["const date = new Date();\n\nconst timer = {\n  start() {\n    const timeStart = Date.now();\n\n    setInterval(() => {\n      const curentTime = Date.now();\n      const deltaTime = curentTime - timeStart;\n      const timeComponents = getTimeComponet(deltaTime);\n    }, 1000);\n  },\n};\ntimer.start();\n\nfunction updateClockFace({ hours, mins, secs }) {\n  refs.clockFace.timeComponents = `${hours}:${mins}:${secs}`;\n}\n\nfunction getTimeComponet(time) {\n  const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n  const secs = Math.floor((time % (1000 * 60)) / 1000);\n  return { hours, mins, secs };\n}\n"]}